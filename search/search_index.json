{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Getting Started","text":""},{"location":"#flet-datatable2","title":"flet-datatable2","text":"<p>An enhanced data table for Flet apps that builds on the built-in component by adding sticky headers, fixed top rows, and fixed left columns while preserving all core features.</p> <p>It is based on data_table_2 Flutter package.</p>"},{"location":"#platform-support","title":"Platform Support","text":"<p>This package supports the following platforms:</p> Platform Supported Windows \u2705 macOS \u2705 Linux \u2705 iOS \u2705 Android \u2705 Web \u2705"},{"location":"#usage","title":"Usage","text":""},{"location":"#installation","title":"Installation","text":"<p>To install the <code>flet-datatable2</code> package and add it to your project dependencies:</p> uvpippoetry <pre><code>uv add flet-datatable2\n</code></pre> <pre><code>pip install flet-datatable2  # (1)!\n</code></pre> <ol> <li>After this, you will have to manually add this package to your <code>requirements.txt</code> or <code>pyproject.toml</code>.</li> </ol> <pre><code>poetry add flet-datatable2\n</code></pre>"},{"location":"#examples","title":"Examples","text":"<p>See these.</p>"},{"location":"changelog/","title":"Changelog","text":""},{"location":"changelog/#changelog","title":"Changelog","text":"<p>All notable changes to this project will be documented in this file.</p> <p>The format is based on Keep a Changelog and this project adheres to Semantic Versioning.</p>"},{"location":"changelog/#020-2025-06-26","title":"0.2.0 - 2025-06-26","text":""},{"location":"changelog/#added","title":"Added","text":"<ul> <li>Deployed online documentation: https://flet-dev.github.io/flet-datatable2/</li> <li>New enums: <code>DataColumnSize</code></li> </ul>"},{"location":"changelog/#changed","title":"Changed","text":"<ul> <li>Refactored all controls to use <code>@flet.control</code> dataclass-style definition. </li> <li>Additionally, they are now all based on their flet counterparts:<ul> <li><code>DataTable2</code> is now based on <code>flet.DataTable</code></li> <li><code>DataColumn2</code> is now based on <code>flet.DataColumn</code></li> <li><code>DataRow2</code> is now based on <code>flet.DataRow</code></li> </ul> </li> </ul>"},{"location":"changelog/#010-2025-03-16","title":"0.1.0 - 2025-03-16","text":"<p>Initial release.</p>"},{"location":"datacolumn2/","title":"DataColumn2","text":""},{"location":"datacolumn2/#flet_datatable2.datacolumn2.DataColumn2","title":"DataColumn2","text":"<p>               Bases: <code>DataColumn</code></p> <p>Extends <code>flet.DataColumn</code>, adding the ability to set relative column size and fixed column width.</p> <p>Meant to be used as an item of <code>DataTable2.columns</code>.</p>"},{"location":"datacolumn2/#flet_datatable2.datacolumn2.DataColumn2.badge","title":"badge","text":"<pre><code>badge: BadgeValue | None = None\n</code></pre> <p>A badge to show on top of this control.</p>"},{"location":"datacolumn2/#flet_datatable2.datacolumn2.DataColumn2.col","title":"col","text":"<pre><code>col: ResponsiveNumber = 12\n</code></pre> <p>If a parent of this control is a <code>ResponsiveRow</code>,  this property is used to determine how many virtual columns of a screen this control will span.</p> <p>Can be a number or a dictionary configured to have a different value for specific breakpoints, for example <code>col={\"sm\": 6}</code>.</p> <p>This control spans the 12 virtual columns by default.</p> <p>/// details | Dimensions     type: info | Breakpoint | Dimension | |---|---| | xs | &lt;576px | | sm | \u2265576px | | md | \u2265768px | | lg | \u2265992px | | xl | \u22651200px | | xxl | \u22651400px | ///</p>"},{"location":"datacolumn2/#flet_datatable2.datacolumn2.DataColumn2.data","title":"data","text":"<pre><code>data: Any = skip_field()\n</code></pre> <p>Arbitrary data of any type.</p>"},{"location":"datacolumn2/#flet_datatable2.datacolumn2.DataColumn2.disabled","title":"disabled","text":"<pre><code>disabled: bool = False\n</code></pre> <p>Every control has <code>disabled</code> property which is <code>False</code> by default - control and all its children are enabled.</p> Note <p>The value of this property will be propagated down to all children controls recursively.</p> <p>/// details | Example     type: example For example, if you have a form with multiple entry controls you can disable them all together by disabling container:</p> <p></p><pre><code>ft.Column(\n    disabled = True,\n    controls=[\n        ft.TextField(),\n        ft.TextField()\n    ]\n)\n</code></pre> ///<p></p>"},{"location":"datacolumn2/#flet_datatable2.datacolumn2.DataColumn2.expand","title":"expand","text":"<pre><code>expand: bool | int | None = None\n</code></pre> <p>Specifies whether/how this control should expand to fill available space in its parent layout.</p> <p>More information here.</p> Note <p>Has effect only if the direct parent of this control is one of the following controls, or their subclasses: <code>Column</code>, <code>Row</code>, <code>View</code>, <code>Page</code>.</p>"},{"location":"datacolumn2/#flet_datatable2.datacolumn2.DataColumn2.expand_loose","title":"expand_loose","text":"<pre><code>expand_loose: bool = False\n</code></pre> <p>Allows the control to expand along the main axis if space is available, but does not require it to fill all available space.</p> <p>More information here.</p> Note <p>If <code>expand_loose</code> is <code>True</code>, it will have effect only if:</p> <ul> <li><code>expand</code> is not <code>None</code> and</li> <li>the direct parent of this control is one of the following controls, or their subclasses:     <code>Column</code>, <code>Row</code>, <code>View</code>, <code>Page</code>.</li> </ul>"},{"location":"datacolumn2/#flet_datatable2.datacolumn2.DataColumn2.fixed_width","title":"fixed_width","text":"<pre><code>fixed_width: Number | None = None\n</code></pre> <p>Defines absolute width of the column in pixels (as opposed to relative <code>size</code> used by default).</p>"},{"location":"datacolumn2/#flet_datatable2.datacolumn2.DataColumn2.heading_row_alignment","title":"heading_row_alignment","text":"<pre><code>heading_row_alignment: MainAxisAlignment | None = None\n</code></pre> <p>Defines the horizontal layout of the label and sort indicator in the heading row.</p>"},{"location":"datacolumn2/#flet_datatable2.datacolumn2.DataColumn2.key","title":"key","text":"<pre><code>key: KeyValue | None = None\n</code></pre>"},{"location":"datacolumn2/#flet_datatable2.datacolumn2.DataColumn2.label","title":"label","text":"<pre><code>label: StrOrControl\n</code></pre> <p>The column heading.</p> <p>Typically, this will be a <code>Text</code> control. It could also be an <code>Icon</code> (typically using size 18), or a combination of both in a <code>Row</code>.</p>"},{"location":"datacolumn2/#flet_datatable2.datacolumn2.DataColumn2.numeric","title":"numeric","text":"<pre><code>numeric: bool = False\n</code></pre> <p>Whether this column represents numeric data or not.</p> <p>The contents of cells of columns containing numeric data are right-aligned.</p>"},{"location":"datacolumn2/#flet_datatable2.datacolumn2.DataColumn2.on_sort","title":"on_sort","text":"<pre><code>on_sort: EventHandler[DataColumnSortEvent] | None = None\n</code></pre> <p>Called when the user asks to sort the table using this column.</p> <p>If not set, the column will not be considered sortable.</p>"},{"location":"datacolumn2/#flet_datatable2.datacolumn2.DataColumn2.opacity","title":"opacity","text":"<pre><code>opacity: Number = 1.0\n</code></pre> <p>Defines the transparency of the control.</p> <p>Value ranges from <code>0.0</code> (completely transparent) to <code>1.0</code> (completely opaque without any transparency).</p>"},{"location":"datacolumn2/#flet_datatable2.datacolumn2.DataColumn2.page","title":"page","text":"<pre><code>page: Page | BasePage | None\n</code></pre> <p>The page to which this control belongs to.</p>"},{"location":"datacolumn2/#flet_datatable2.datacolumn2.DataColumn2.parent","title":"parent","text":"<pre><code>parent: BaseControl | None\n</code></pre> <p>The direct ancestor(parent) of this control.</p> <p>It defaults to <code>None</code> and will only have a value when this control is mounted (added to the page tree).</p> <p>The <code>Page</code> control (which is the root of the tree) is an exception - it always has <code>parent=None</code>.</p>"},{"location":"datacolumn2/#flet_datatable2.datacolumn2.DataColumn2.rtl","title":"rtl","text":"<pre><code>rtl: bool = False\n</code></pre> <p>Whether the text direction of the control should be right-to-left (RTL).</p>"},{"location":"datacolumn2/#flet_datatable2.datacolumn2.DataColumn2.size","title":"size","text":"<pre><code>size: DataColumnSize | None = S\n</code></pre> <p>Column sizes are determined based on available width by distributing it to individual columns accounting for their relative sizes.</p>"},{"location":"datacolumn2/#flet_datatable2.datacolumn2.DataColumn2.tooltip","title":"tooltip","text":"<pre><code>tooltip: str | None = field(default=None, kw_only=True)\n</code></pre> <p>The column heading's tooltip.</p> <p>This is a longer description of the column heading, for cases where the heading might have been abbreviated to keep the column width to a reasonable size.</p>"},{"location":"datacolumn2/#flet_datatable2.datacolumn2.DataColumn2.visible","title":"visible","text":"<pre><code>visible: bool = True\n</code></pre> <p>Every control has <code>visible</code> property which is <code>True</code> by default - control is rendered on the page. Setting <code>visible</code> to <code>False</code> completely prevents control (and all its children if any) from rendering on a page canvas. Hidden controls cannot be focused or selected with a keyboard or mouse and they do not emit any events.</p>"},{"location":"datacolumn2/#flet_datatable2.datacolumn2.DataColumn2.before_event","title":"before_event","text":"<pre><code>before_event(e: ControlEvent)\n</code></pre>"},{"location":"datacolumn2/#flet_datatable2.datacolumn2.DataColumn2.before_update","title":"before_update","text":"<pre><code>before_update()\n</code></pre>"},{"location":"datacolumn2/#flet_datatable2.datacolumn2.DataColumn2.build","title":"build","text":"<pre><code>build()\n</code></pre> <p>Called once during control initialization to define its child controls. self.page is available in this method.</p>"},{"location":"datacolumn2/#flet_datatable2.datacolumn2.DataColumn2.clean","title":"clean","text":"<pre><code>clean() -&gt; None\n</code></pre>"},{"location":"datacolumn2/#flet_datatable2.datacolumn2.DataColumn2.did_mount","title":"did_mount","text":"<pre><code>did_mount()\n</code></pre>"},{"location":"datacolumn2/#flet_datatable2.datacolumn2.DataColumn2.init","title":"init","text":"<pre><code>init()\n</code></pre>"},{"location":"datacolumn2/#flet_datatable2.datacolumn2.DataColumn2.is_isolated","title":"is_isolated","text":"<pre><code>is_isolated()\n</code></pre>"},{"location":"datacolumn2/#flet_datatable2.datacolumn2.DataColumn2.update","title":"update","text":"<pre><code>update() -&gt; None\n</code></pre>"},{"location":"datacolumn2/#flet_datatable2.datacolumn2.DataColumn2.will_unmount","title":"will_unmount","text":"<pre><code>will_unmount()\n</code></pre>"},{"location":"datarow2/","title":"DataRow2","text":""},{"location":"datarow2/#flet_datatable2.datarow2.DataRow2","title":"DataRow2","text":"<p>               Bases: <code>DataRow</code></p> <p>Extends <code>flet.DataRow</code>, adding row-level <code>tap</code> events.</p> <p>There are also <code>on_secondary_tap</code> and <code>on_secondary_tap_down</code>, which are not available in <code>DataCell</code>s and can be useful in desktop settings to handle right-click actions.</p>"},{"location":"datarow2/#flet_datatable2.datarow2.DataRow2.badge","title":"badge","text":"<pre><code>badge: BadgeValue | None = None\n</code></pre> <p>A badge to show on top of this control.</p>"},{"location":"datarow2/#flet_datatable2.datarow2.DataRow2.cells","title":"cells","text":"<pre><code>cells: list[DataCell] = field(default_factory=list)\n</code></pre> <p>The data for this row - a list of <code>DataCell</code> controls.</p> Note <p>There must be exactly as many cells as there are columns in the table.</p>"},{"location":"datarow2/#flet_datatable2.datarow2.DataRow2.col","title":"col","text":"<pre><code>col: ResponsiveNumber = 12\n</code></pre> <p>If a parent of this control is a <code>ResponsiveRow</code>,  this property is used to determine how many virtual columns of a screen this control will span.</p> <p>Can be a number or a dictionary configured to have a different value for specific breakpoints, for example <code>col={\"sm\": 6}</code>.</p> <p>This control spans the 12 virtual columns by default.</p> <p>/// details | Dimensions     type: info | Breakpoint | Dimension | |---|---| | xs | &lt;576px | | sm | \u2265576px | | md | \u2265768px | | lg | \u2265992px | | xl | \u22651200px | | xxl | \u22651400px | ///</p>"},{"location":"datarow2/#flet_datatable2.datarow2.DataRow2.color","title":"color","text":"<pre><code>color: ControlStateValue[ColorValue] | None = None\n</code></pre> <p>The color for the row.</p> <p>By default, the color is transparent unless selected. Selected rows has a grey translucent color.</p> <p>The effective color can depend on the <code>ControlState</code> state, if the row is selected, pressed, hovered, focused, disabled or enabled. The color is painted as an overlay to the row. To make sure that the row's InkWell is visible (when pressed, hovered and focused), it is recommended to use a translucent color.</p>"},{"location":"datarow2/#flet_datatable2.datarow2.DataRow2.data","title":"data","text":"<pre><code>data: Any = skip_field()\n</code></pre> <p>Arbitrary data of any type.</p>"},{"location":"datarow2/#flet_datatable2.datarow2.DataRow2.decoration","title":"decoration","text":"<pre><code>decoration: BoxDecoration | None = None\n</code></pre> <p>Decoration to be applied to this row. </p> Note <p>If provided, <code>DataTable2.divider_thickness</code> has no effect.</p>"},{"location":"datarow2/#flet_datatable2.datarow2.DataRow2.disabled","title":"disabled","text":"<pre><code>disabled: bool = False\n</code></pre> <p>Every control has <code>disabled</code> property which is <code>False</code> by default - control and all its children are enabled.</p> Note <p>The value of this property will be propagated down to all children controls recursively.</p> <p>/// details | Example     type: example For example, if you have a form with multiple entry controls you can disable them all together by disabling container:</p> <p></p><pre><code>ft.Column(\n    disabled = True,\n    controls=[\n        ft.TextField(),\n        ft.TextField()\n    ]\n)\n</code></pre> ///<p></p>"},{"location":"datarow2/#flet_datatable2.datarow2.DataRow2.expand","title":"expand","text":"<pre><code>expand: bool | int | None = None\n</code></pre> <p>Specifies whether/how this control should expand to fill available space in its parent layout.</p> <p>More information here.</p> Note <p>Has effect only if the direct parent of this control is one of the following controls, or their subclasses: <code>Column</code>, <code>Row</code>, <code>View</code>, <code>Page</code>.</p>"},{"location":"datarow2/#flet_datatable2.datarow2.DataRow2.expand_loose","title":"expand_loose","text":"<pre><code>expand_loose: bool = False\n</code></pre> <p>Allows the control to expand along the main axis if space is available, but does not require it to fill all available space.</p> <p>More information here.</p> Note <p>If <code>expand_loose</code> is <code>True</code>, it will have effect only if:</p> <ul> <li><code>expand</code> is not <code>None</code> and</li> <li>the direct parent of this control is one of the following controls, or their subclasses:     <code>Column</code>, <code>Row</code>, <code>View</code>, <code>Page</code>.</li> </ul>"},{"location":"datarow2/#flet_datatable2.datarow2.DataRow2.key","title":"key","text":"<pre><code>key: KeyValue | None = None\n</code></pre>"},{"location":"datarow2/#flet_datatable2.datarow2.DataRow2.on_double_tap","title":"on_double_tap","text":"<pre><code>on_double_tap: ControlEventHandler[DataRow2] | None = None\n</code></pre> <p>Fires when the row is double-tapped.</p> Note <p>Won't be called if tapped cell has any tap event handlers  (<code>on_tap</code>,  <code>on_double_tap</code>,  <code>on_long_press</code>,  <code>on_tap_cancel</code>,  <code>on_tap_down</code>) set.</p>"},{"location":"datarow2/#flet_datatable2.datarow2.DataRow2.on_long_press","title":"on_long_press","text":"<pre><code>on_long_press: ControlEventHandler[DataRow] | None = None\n</code></pre> <p>Called if the row is long-pressed.</p> <p>If a <code>DataCell</code> in the row has its <code>DataCell.on_tap</code>, <code>DataCell.on_double_tap</code>, <code>DataCell.on_long_press</code>, <code>DataCell.on_tap_cancel</code> or <code>DataCell.on_tap_down</code> callback defined, that callback behavior overrides the gesture behavior of the row for that particular cell.</p>"},{"location":"datarow2/#flet_datatable2.datarow2.DataRow2.on_secondary_tap","title":"on_secondary_tap","text":"<pre><code>on_secondary_tap: ControlEventHandler[DataRow2] | None = (\n    None\n)\n</code></pre> <p>Fires when the row is right-clicked (secondary tap).</p> Note <p>Won't be called if tapped cell has any tap event handlers  (<code>on_tap</code>,  <code>on_double_tap</code>,  <code>on_long_press</code>,  <code>on_tap_cancel</code>,  <code>on_tap_down</code>) set.</p>"},{"location":"datarow2/#flet_datatable2.datarow2.DataRow2.on_secondary_tap_down","title":"on_secondary_tap_down","text":"<pre><code>on_secondary_tap_down: (\n    ControlEventHandler[DataRow2] | None\n) = None\n</code></pre> <p>Fires when the row is right-clicked (secondary tap down).</p> Note <p>Won't be called if tapped cell has any tap event handlers  (<code>on_tap</code>,  <code>on_double_tap</code>,  <code>on_long_press</code>,  <code>on_tap_cancel</code>,  <code>on_tap_down</code>) set.</p>"},{"location":"datarow2/#flet_datatable2.datarow2.DataRow2.on_select_change","title":"on_select_change","text":"<pre><code>on_select_change: ControlEventHandler[DataRow] | None = None\n</code></pre> <p>Called when the user selects or unselects a selectable row.</p> <p>If this is not null, then this row is selectable. The current selection state of this row is given by selected.</p> <p>If any row is selectable, then the table's heading row will have a checkbox that can be checked to select all selectable rows (and which is checked if all the rows are selected), and each subsequent row will have a checkbox to toggle just that row.</p> <p>A row whose <code>on_select_change</code> callback is null is ignored for the purposes of determining the state of the \"all\" checkbox, and its checkbox is disabled.</p> <p>If a <code>DataCell</code> in the row has its <code>DataCell.on_tap</code> callback defined, that callback behavior overrides the gesture behavior of the row for that particular cell.</p>"},{"location":"datarow2/#flet_datatable2.datarow2.DataRow2.on_tap","title":"on_tap","text":"<pre><code>on_tap: EventHandler[TapEvent[DataRow2]] | None = None\n</code></pre> <p>Fires when the row is tapped.</p> Note <p>Won't be called if tapped cell has any tap event handlers  (<code>on_tap</code>,  <code>on_double_tap</code>,  <code>on_long_press</code>,  <code>on_tap_cancel</code>,  <code>on_tap_down</code>) set.</p>"},{"location":"datarow2/#flet_datatable2.datarow2.DataRow2.opacity","title":"opacity","text":"<pre><code>opacity: Number = 1.0\n</code></pre> <p>Defines the transparency of the control.</p> <p>Value ranges from <code>0.0</code> (completely transparent) to <code>1.0</code> (completely opaque without any transparency).</p>"},{"location":"datarow2/#flet_datatable2.datarow2.DataRow2.page","title":"page","text":"<pre><code>page: Page | BasePage | None\n</code></pre> <p>The page to which this control belongs to.</p>"},{"location":"datarow2/#flet_datatable2.datarow2.DataRow2.parent","title":"parent","text":"<pre><code>parent: BaseControl | None\n</code></pre> <p>The direct ancestor(parent) of this control.</p> <p>It defaults to <code>None</code> and will only have a value when this control is mounted (added to the page tree).</p> <p>The <code>Page</code> control (which is the root of the tree) is an exception - it always has <code>parent=None</code>.</p>"},{"location":"datarow2/#flet_datatable2.datarow2.DataRow2.rtl","title":"rtl","text":"<pre><code>rtl: bool = False\n</code></pre> <p>Whether the text direction of the control should be right-to-left (RTL).</p>"},{"location":"datarow2/#flet_datatable2.datarow2.DataRow2.selected","title":"selected","text":"<pre><code>selected: bool = False\n</code></pre> <p>Whether the row is selected.</p> <p>If <code>on_select_change</code> is non-null for any row in the table, then a checkbox is shown at the start of each row. If the row is selected (<code>True</code>), the checkbox will be checked and the row will be highlighted.</p> <p>Otherwise, the checkbox, if present, will not be checked.</p>"},{"location":"datarow2/#flet_datatable2.datarow2.DataRow2.specific_row_height","title":"specific_row_height","text":"<pre><code>specific_row_height: Number | None = None\n</code></pre> <p>Specific row height. </p> <p>Falls back to <code>DataTable2.data_row_height</code> if not set.</p>"},{"location":"datarow2/#flet_datatable2.datarow2.DataRow2.tooltip","title":"tooltip","text":"<pre><code>tooltip: TooltipValue | None = None\n</code></pre> <p>The tooltip ot show when this control is hovered over.</p>"},{"location":"datarow2/#flet_datatable2.datarow2.DataRow2.visible","title":"visible","text":"<pre><code>visible: bool = True\n</code></pre> <p>Every control has <code>visible</code> property which is <code>True</code> by default - control is rendered on the page. Setting <code>visible</code> to <code>False</code> completely prevents control (and all its children if any) from rendering on a page canvas. Hidden controls cannot be focused or selected with a keyboard or mouse and they do not emit any events.</p>"},{"location":"datarow2/#flet_datatable2.datarow2.DataRow2.before_event","title":"before_event","text":"<pre><code>before_event(e: ControlEvent)\n</code></pre>"},{"location":"datarow2/#flet_datatable2.datarow2.DataRow2.before_update","title":"before_update","text":"<pre><code>before_update()\n</code></pre>"},{"location":"datarow2/#flet_datatable2.datarow2.DataRow2.build","title":"build","text":"<pre><code>build()\n</code></pre> <p>Called once during control initialization to define its child controls. self.page is available in this method.</p>"},{"location":"datarow2/#flet_datatable2.datarow2.DataRow2.clean","title":"clean","text":"<pre><code>clean() -&gt; None\n</code></pre>"},{"location":"datarow2/#flet_datatable2.datarow2.DataRow2.did_mount","title":"did_mount","text":"<pre><code>did_mount()\n</code></pre>"},{"location":"datarow2/#flet_datatable2.datarow2.DataRow2.init","title":"init","text":"<pre><code>init()\n</code></pre>"},{"location":"datarow2/#flet_datatable2.datarow2.DataRow2.is_isolated","title":"is_isolated","text":"<pre><code>is_isolated()\n</code></pre>"},{"location":"datarow2/#flet_datatable2.datarow2.DataRow2.update","title":"update","text":"<pre><code>update() -&gt; None\n</code></pre>"},{"location":"datarow2/#flet_datatable2.datarow2.DataRow2.will_unmount","title":"will_unmount","text":"<pre><code>will_unmount()\n</code></pre>"},{"location":"datatable2/","title":"DataTable2","text":""},{"location":"datatable2/#examples","title":"Examples","text":"<p>Live demo</p>"},{"location":"datatable2/#example-1","title":"Example 1","text":"example_1.py<pre><code>import flet as ft\n\nimport flet_datatable2 as fdt\n\n\ndef main(page: ft.Page):\n    page.add(\n        fdt.DataTable2(\n            empty=ft.Text(\"This table is empty.\"),\n            columns=[\n                fdt.DataColumn2(label=ft.Text(\"First name\")),\n                fdt.DataColumn2(label=ft.Text(\"Last name\")),\n                fdt.DataColumn2(label=ft.Text(\"Age\"), numeric=True),\n            ],\n        ),\n    )\n\n\nft.run(main)\n</code></pre>"},{"location":"datatable2/#example-2","title":"Example 2","text":"example_2.py<pre><code>import flet as ft\nfrom data import desserts\n\nimport flet_datatable2 as ftd\n\n\ndef main(page: ft.Page):\n    page.vertical_alignment = ft.MainAxisAlignment.CENTER\n    page.horizontal_alignment = ft.CrossAxisAlignment.CENTER\n\n    def handle_row_selection_change(e: ft.Event[ftd.DataRow2]):\n        e.control.selected = not e.control.selected\n        e.control.update()\n\n    def sort_column(e: ft.DataColumnSortEvent):\n        print(f\"Sorting column {e.column_index}, ascending={e.ascending}\")\n\n    def get_data_columns():\n        data_columns = [\n            ftd.DataColumn2(\n                label=ft.Text(\"Name\"),\n                size=ftd.DataColumnSize.L,\n                on_sort=sort_column,\n                heading_row_alignment=ft.MainAxisAlignment.START,\n            ),\n            ftd.DataColumn2(\n                label=ft.Text(\"Calories\"),\n                on_sort=sort_column,\n                numeric=True,\n                heading_row_alignment=ft.MainAxisAlignment.END,\n            ),\n            ftd.DataColumn2(\n                label=ft.Text(\"Fat\"),\n                on_sort=sort_column,\n                numeric=True,\n            ),\n            ftd.DataColumn2(\n                label=ft.Text(\"Carbs\"),\n                on_sort=sort_column,\n                numeric=True,\n            ),\n            ftd.DataColumn2(\n                label=ft.Text(\"Protein\"),\n                on_sort=sort_column,\n                numeric=True,\n            ),\n            ftd.DataColumn2(\n                label=ft.Text(\"Sodium\"),\n                on_sort=sort_column,\n                numeric=True,\n            ),\n            ftd.DataColumn2(\n                label=ft.Text(\"Calcium\"),\n                on_sort=sort_column,\n                numeric=True,\n            ),\n            ftd.DataColumn2(\n                label=ft.Text(\"Iron\"),\n                on_sort=sort_column,\n                numeric=True,\n            ),\n        ]\n        return data_columns\n\n    def get_data_rows(desserts):\n        data_rows = []\n        for dessert in desserts:\n            data_rows.append(\n                ftd.DataRow2(\n                    specific_row_height=50,\n                    on_select_change=handle_row_selection_change,\n                    cells=[\n                        ft.DataCell(content=ft.Text(dessert.name)),\n                        ft.DataCell(content=ft.Text(dessert.calories)),\n                        ft.DataCell(content=ft.Text(dessert.fat)),\n                        ft.DataCell(content=ft.Text(dessert.carbs)),\n                        ft.DataCell(content=ft.Text(dessert.protein)),\n                        ft.DataCell(content=ft.Text(dessert.sodium)),\n                        ft.DataCell(content=ft.Text(dessert.calcium)),\n                        ft.DataCell(content=ft.Text(dessert.iron)),\n                    ],\n                )\n            )\n        return data_rows\n\n    page.add(\n        ftd.DataTable2(\n            show_checkbox_column=True,\n            expand=True,\n            column_spacing=0,\n            heading_row_color=ft.Colors.SECONDARY_CONTAINER,\n            horizontal_margin=12,\n            sort_ascending=True,\n            bottom_margin=10,\n            min_width=600,\n            on_select_all=lambda e: print(\"All selected\"),\n            columns=get_data_columns(),\n            rows=get_data_rows(desserts),\n        ),\n    )\n\n\nft.run(main)\n</code></pre>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2","title":"DataTable2","text":"<p>               Bases: <code>DataTable</code></p> <p>Extends <code>flet.DataTable</code>.</p> <p>Provides sticky header row, scrollable data rows, and additional layout flexibility with <code>DataColumn2</code> and <code>DataRow2</code>.</p> Note <p><code>DataTable2</code> doesn't support <code>DataTable.data_row_min_height</code> and <code>DataTable.data_row_max_height</code> properties present in the parent <code>DataTable</code>. Use <code>data_row_height</code> instead.</p>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2._c","title":"_c","text":"<pre><code>_c: str = field(init=False)\n</code></pre>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2._i","title":"_i","text":"<pre><code>_i: int = field(init=False, compare=False)\n</code></pre>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2._internals","title":"_internals","text":"<pre><code>_internals: dict = field(\n    default_factory=dict,\n    init=False,\n    repr=False,\n    compare=False,\n)\n</code></pre>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2.align","title":"align","text":"<pre><code>align: Alignment | None = None\n</code></pre> <p>Alignment of the control within its parent.</p>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2.animate_align","title":"animate_align","text":"<pre><code>animate_align: AnimationValue | None = None\n</code></pre> <p>Enables implicit animation of the <code>align</code> property.</p> <p>More information here.</p>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2.animate_margin","title":"animate_margin","text":"<pre><code>animate_margin: AnimationValue | None = None\n</code></pre> <p>Enables implicit animation of the <code>margin</code> property.</p> <p>More information here.</p>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2.animate_offset","title":"animate_offset","text":"<pre><code>animate_offset: AnimationValue | None = None\n</code></pre> <p>Enables implicit animation of the <code>offset</code> property.</p> <p>More information here.</p>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2.animate_opacity","title":"animate_opacity","text":"<pre><code>animate_opacity: AnimationValue | None = None\n</code></pre> <p>Enables implicit animation of the <code>opacity</code> property.</p> <p>More information here.</p>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2.animate_position","title":"animate_position","text":"<pre><code>animate_position: AnimationValue | None = None\n</code></pre> <p>Enables implicit animation of the positioning properties (<code>left</code>, <code>right</code>, <code>top</code> and <code>bottom</code>).</p> <p>More information here.</p>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2.animate_rotation","title":"animate_rotation","text":"<pre><code>animate_rotation: AnimationValue | None = None\n</code></pre> <p>Enables implicit animation of the <code>rotate</code> property.</p> <p>More information here.</p>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2.animate_scale","title":"animate_scale","text":"<pre><code>animate_scale: AnimationValue | None = None\n</code></pre> <p>Enables implicit animation of the <code>scale</code> property.</p> <p>More information here.</p>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2.animate_size","title":"animate_size","text":"<pre><code>animate_size: AnimationValue | None = None\n</code></pre> <p>TBD</p>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2.aspect_ratio","title":"aspect_ratio","text":"<pre><code>aspect_ratio: Number | None = None\n</code></pre> <p>TBD</p>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2.badge","title":"badge","text":"<pre><code>badge: BadgeValue | None = None\n</code></pre> <p>A badge to show on top of this control.</p>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2.bgcolor","title":"bgcolor","text":"<pre><code>bgcolor: ColorValue | None = None\n</code></pre> <p>The background color for the table.</p>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2.border","title":"border","text":"<pre><code>border: Border | None = None\n</code></pre> <p>The border around the table.</p>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2.border_radius","title":"border_radius","text":"<pre><code>border_radius: BorderRadiusValue | None = None\n</code></pre> <p>Border corners.</p>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2.bottom","title":"bottom","text":"<pre><code>bottom: Number | None = None\n</code></pre> <p>The distance that the child's bottom edge is inset from the bottom of the stack.</p> Note <p>Effective only if this control is a descendant of one of the following: <code>Stack</code> control, <code>Page.overlay</code> list.</p>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2.bottom_margin","title":"bottom_margin","text":"<pre><code>bottom_margin: Number | None = None\n</code></pre> <p>Adds space after the last row if set.</p>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2.checkbox_alignment","title":"checkbox_alignment","text":"<pre><code>checkbox_alignment: Alignment = field(\n    default_factory=lambda: CENTER\n)\n</code></pre> <p>Alignment of the checkbox.</p>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2.checkbox_horizontal_margin","title":"checkbox_horizontal_margin","text":"<pre><code>checkbox_horizontal_margin: Number | None = None\n</code></pre> <p>Horizontal margin around the checkbox, if it is displayed.</p>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2.clip_behavior","title":"clip_behavior","text":"<pre><code>clip_behavior: ClipBehavior = NONE\n</code></pre> <p>Defines how the contents of the table are clipped.</p>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2.col","title":"col","text":"<pre><code>col: ResponsiveNumber = 12\n</code></pre> <p>If a parent of this control is a <code>ResponsiveRow</code>,  this property is used to determine how many virtual columns of a screen this control will span.</p> <p>Can be a number or a dictionary configured to have a different value for specific breakpoints, for example <code>col={\"sm\": 6}</code>.</p> <p>This control spans the 12 virtual columns by default.</p> <p>/// details | Dimensions     type: info | Breakpoint | Dimension | |---|---| | xs | &lt;576px | | sm | \u2265576px | | md | \u2265768px | | lg | \u2265992px | | xl | \u22651200px | | xxl | \u22651400px | ///</p>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2.column_spacing","title":"column_spacing","text":"<pre><code>column_spacing: Number | None = None\n</code></pre> <p>The horizontal margin between the contents of each data column.</p>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2.columns","title":"columns","text":"<pre><code>columns: list[DataColumn2 | DataColumn]\n</code></pre> <p>A list of table columns.</p>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2.data","title":"data","text":"<pre><code>data: Any = skip_field()\n</code></pre> <p>Arbitrary data of any type.</p>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2.data_row_checkbox_theme","title":"data_row_checkbox_theme","text":"<pre><code>data_row_checkbox_theme: CheckboxTheme | None = None\n</code></pre> <p>Overrides theme of checkboxes in each data row.</p>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2.data_row_color","title":"data_row_color","text":"<pre><code>data_row_color: ControlStateValue[ColorValue] | None = None\n</code></pre> <p>The background color for the data rows.</p> <p>The effective background color can be made to depend on the <code>ControlState</code> state, i.e. if the row is selected, pressed, hovered, focused, disabled or enabled. The color is painted as an overlay to the row. To make sure that the row's InkWell is visible (when pressed, hovered and focused), it is recommended to use a translucent background color.</p>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2.data_row_height","title":"data_row_height","text":"<pre><code>data_row_height: Number | None = None\n</code></pre> <p>Height of each data row.</p>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2.data_text_style","title":"data_text_style","text":"<pre><code>data_text_style: TextStyle | None = None\n</code></pre> <p>The text style for data rows.</p>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2.disabled","title":"disabled","text":"<pre><code>disabled: bool = False\n</code></pre> <p>Every control has <code>disabled</code> property which is <code>False</code> by default - control and all its children are enabled.</p> Note <p>The value of this property will be propagated down to all children controls recursively.</p> <p>/// details | Example     type: example For example, if you have a form with multiple entry controls you can disable them all together by disabling container:</p> <p></p><pre><code>ft.Column(\n    disabled = True,\n    controls=[\n        ft.TextField(),\n        ft.TextField()\n    ]\n)\n</code></pre> ///<p></p>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2.divider_thickness","title":"divider_thickness","text":"<pre><code>divider_thickness: Number = 1.0\n</code></pre> <p>The width of the divider that appears between <code>rows</code>.</p> Note <p>Must be greater than or equal to zero.</p>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2.empty","title":"empty","text":"<pre><code>empty: Control | None = None\n</code></pre> <p>Placeholder control shown when there are no data rows.</p>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2.expand","title":"expand","text":"<pre><code>expand: bool | int | None = None\n</code></pre> <p>Specifies whether/how this control should expand to fill available space in its parent layout.</p> <p>More information here.</p> Note <p>Has effect only if the direct parent of this control is one of the following controls, or their subclasses: <code>Column</code>, <code>Row</code>, <code>View</code>, <code>Page</code>.</p>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2.expand_loose","title":"expand_loose","text":"<pre><code>expand_loose: bool = False\n</code></pre> <p>Allows the control to expand along the main axis if space is available, but does not require it to fill all available space.</p> <p>More information here.</p> Note <p>If <code>expand_loose</code> is <code>True</code>, it will have effect only if:</p> <ul> <li><code>expand</code> is not <code>None</code> and</li> <li>the direct parent of this control is one of the following controls, or their subclasses:     <code>Column</code>, <code>Row</code>, <code>View</code>, <code>Page</code>.</li> </ul>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2.fixed_columns_color","title":"fixed_columns_color","text":"<pre><code>fixed_columns_color: ColorValue | None = None\n</code></pre> <p>Background color for sticky left columns.</p>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2.fixed_corner_color","title":"fixed_corner_color","text":"<pre><code>fixed_corner_color: ColorValue | None = None\n</code></pre> <p>Background color of the fixed top-left corner cell.</p>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2.fixed_left_columns","title":"fixed_left_columns","text":"<pre><code>fixed_left_columns: int = 0\n</code></pre> <p>Number of sticky columns on the left. Includes checkbox column, if present.</p>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2.fixed_top_rows","title":"fixed_top_rows","text":"<pre><code>fixed_top_rows: int = 1\n</code></pre> <p>Number of sticky rows from the top. Includes heading row by default.</p>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2.gradient","title":"gradient","text":"<pre><code>gradient: Gradient | None = None\n</code></pre> <p>The background gradient for the table.</p>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2.heading_checkbox_theme","title":"heading_checkbox_theme","text":"<pre><code>heading_checkbox_theme: CheckboxTheme | None = None\n</code></pre> <p>Overrides theme of the heading checkbox.</p>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2.heading_row_color","title":"heading_row_color","text":"<pre><code>heading_row_color: ControlStateValue[ColorValue] | None = (\n    None\n)\n</code></pre> <p>The background color for the heading row.</p> <p>The effective background color can be made to depend on the <code>ControlState</code> state, i.e. if the row is pressed, hovered, focused when sorted. The color is painted as an overlay to the row. To make sure that the row's InkWell is visible (when pressed, hovered and focused), it is recommended to use a translucent color.</p>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2.heading_row_height","title":"heading_row_height","text":"<pre><code>heading_row_height: Number | None = None\n</code></pre> <p>The height of the heading row.</p>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2.heading_text_style","title":"heading_text_style","text":"<pre><code>heading_text_style: TextStyle | None = None\n</code></pre> <p>The text style for the heading row.</p>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2.height","title":"height","text":"<pre><code>height: Number | None = None\n</code></pre> <p>Imposed Control height in virtual pixels.</p>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2.horizontal_lines","title":"horizontal_lines","text":"<pre><code>horizontal_lines: BorderSide | None = None\n</code></pre> <p>Set the color and width of horizontal lines between rows.</p>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2.horizontal_margin","title":"horizontal_margin","text":"<pre><code>horizontal_margin: Number | None = None\n</code></pre> <p>The horizontal margin between the edges of the table and the content in the first and last cells of each row.</p> <p>When a checkbox is displayed, it is also the margin between the checkbox the content in the first data column.</p>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2.key","title":"key","text":"<pre><code>key: KeyValue | None = None\n</code></pre>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2.left","title":"left","text":"<pre><code>left: Number | None = None\n</code></pre> <p>The distance that the child's left edge is inset from the left of the stack.</p> Note <p>Effective only if this control is a descendant of one of the following: <code>Stack</code> control, <code>Page.overlay</code> list.</p>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2.lm_ratio","title":"lm_ratio","text":"<pre><code>lm_ratio: Number = 1.2\n</code></pre> <p>Ratio of Large column width to Medium.</p>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2.margin","title":"margin","text":"<pre><code>margin: MarginValue | None = None\n</code></pre> <p>Sets the margin of the control.</p>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2.min_width","title":"min_width","text":"<pre><code>min_width: Number | None = None\n</code></pre> <p>Minimum table width before horizontal scrolling kicks in.</p>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2.offset","title":"offset","text":"<pre><code>offset: OffsetValue | None = None\n</code></pre> <p>Applies a translation transformation before painting the control.</p> <p>The translation is expressed as an <code>Offset</code> scaled to the control's size. So, <code>Offset(x=0.25, y=0)</code>, for example, will result in a horizontal translation of one quarter the width of this control.</p> <p>/// details | Example     type: example The following example displays container at <code>0, 0</code> top left corner of a stack as transform applies <code>-1 * 100, -1 * 100</code> (<code>offset * control's size</code>) horizontal and vertical translations to the control:</p> <p></p><pre><code>import flet as ft\n\ndef main(page: ft.Page):\n    page.add(\n        ft.Stack(\n            width=1000,\n            height=1000,\n            controls=[\n                ft.Container(\n                    bgcolor=\"red\",\n                    width=100,\n                    height=100,\n                    left=100,\n                    top=100,\n                    offset=ft.Offset(-1, -1),\n                )\n            ],\n        )\n    )\n\nft.run(main)\n</code></pre> ///<p></p>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2.on_animation_end","title":"on_animation_end","text":"<pre><code>on_animation_end: (\n    ControlEventHandler[LayoutControl] | None\n) = None\n</code></pre> <p>Called when animation completes.</p> <p>Can be used to chain multiple animations.</p> <p>The <code>data</code> property of the event handler argument contains the name of the animation.</p> <p>More information here.</p>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2.on_select_all","title":"on_select_all","text":"<pre><code>on_select_all: ControlEventHandler[DataTable] | None = None\n</code></pre> <p>Invoked when the user selects or unselects every row, using the checkbox in the heading row.</p> <p>If this is <code>None</code>, then the <code>DataRow.on_select_change</code> callback of every row in the table is invoked appropriately instead.</p> <p>To control whether a particular row is selectable or not, see <code>DataRow.on_select_change</code>. This callback is only relevant if any row is selectable.</p>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2.opacity","title":"opacity","text":"<pre><code>opacity: Number = 1.0\n</code></pre> <p>Defines the transparency of the control.</p> <p>Value ranges from <code>0.0</code> (completely transparent) to <code>1.0</code> (completely opaque without any transparency).</p>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2.page","title":"page","text":"<pre><code>page: Page | BasePage | None\n</code></pre> <p>The page to which this control belongs to.</p>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2.parent","title":"parent","text":"<pre><code>parent: BaseControl | None\n</code></pre> <p>The direct ancestor(parent) of this control.</p> <p>It defaults to <code>None</code> and will only have a value when this control is mounted (added to the page tree).</p> <p>The <code>Page</code> control (which is the root of the tree) is an exception - it always has <code>parent=None</code>.</p>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2.right","title":"right","text":"<pre><code>right: Number | None = None\n</code></pre> <p>The distance that the child's right edge is inset from the right of the stack.</p> Note <p>Effective only if this control is a descendant of one of the following: <code>Stack</code> control, <code>Page.overlay</code> list.</p>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2.rotate","title":"rotate","text":"<pre><code>rotate: RotateValue | None = None\n</code></pre> <p>Transforms this control using a rotation around its center.</p> <p>The value of <code>rotate</code> property could be one of the following types:</p> <ul> <li><code>number</code> - a rotation in clockwise radians. Full circle <code>360\u00b0</code> is <code>math.pi * 2</code> radians, <code>90\u00b0</code> is <code>pi / 2</code>, <code>45\u00b0</code> is <code>pi / 4</code>, etc.</li> <li><code>Rotate</code> - allows to specify rotation <code>angle</code> as well as <code>alignment</code> - the location of rotation center.</li> </ul> <p>/// details | Example     type: example For example: </p><pre><code>ft.Image(\n    src=\"https://picsum.photos/100/100\",\n    width=100,\n    height=100,\n    border_radius=5,\n    rotate=Rotate(angle=0.25 * pi, alignment=ft.Alignment.CENTER_LEFT)\n)\n</code></pre> ///<p></p>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2.rows","title":"rows","text":"<pre><code>rows: list[DataRow | DataRow2] = field(default_factory=list)\n</code></pre> <p>A list of table rows.</p>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2.rtl","title":"rtl","text":"<pre><code>rtl: bool = False\n</code></pre> <p>Whether the text direction of the control should be right-to-left (RTL).</p>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2.scale","title":"scale","text":"<pre><code>scale: ScaleValue | None = None\n</code></pre> <p>Scales this control along the 2D plane. Default scale factor is <code>1.0</code>, meaning no-scale.</p> <p>Setting this property to <code>0.5</code>, for example, makes this control twice smaller, while <code>2.0</code> makes it twice larger.</p> <p>Different scale multipliers can be specified for <code>x</code> and <code>y</code> axis, by setting <code>Control.scale</code> property to an instance of <code>Scale</code> class. Either <code>scale</code> or <code>scale_x</code> and <code>scale_y</code> could be specified, but not all of them.</p> <p>/// details | Example     type: example </p><pre><code>ft.Image(\n    src=\"https://picsum.photos/100/100\",\n    width=100,\n    height=100,\n    border_radius=5,\n    scale=ft.Scale(scale_x=2, scale_y=0.5)\n)\n</code></pre> ///<p></p>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2.show_bottom_border","title":"show_bottom_border","text":"<pre><code>show_bottom_border: bool = False\n</code></pre> <p>Whether a border at the bottom of the table is displayed.</p> <p>By default, a border is not shown at the bottom to allow for a border around the table defined by decoration.</p>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2.show_checkbox_column","title":"show_checkbox_column","text":"<pre><code>show_checkbox_column: bool = False\n</code></pre> <p>Whether the control should display checkboxes for selectable rows.</p> <p>If <code>True</code>, a checkbox will be placed at the beginning of each row that is selectable. However, if <code>DataRow.on_select_change</code> is not set for any row, checkboxes will not be placed, even if this value is <code>True</code>.</p> <p>If <code>False</code>, all rows will not display a checkbox.</p>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2.show_heading_checkbox","title":"show_heading_checkbox","text":"<pre><code>show_heading_checkbox: bool = True\n</code></pre> <p>Controls visibility of the heading checkbox.</p>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2.sm_ratio","title":"sm_ratio","text":"<pre><code>sm_ratio: Number = 0.67\n</code></pre> <p>Ratio of Small column width to Medium.</p>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2.sort_arrow_animation_duration","title":"sort_arrow_animation_duration","text":"<pre><code>sort_arrow_animation_duration: DurationValue = field(\n    default_factory=lambda: Duration(milliseconds=150)\n)\n</code></pre> <p>Duration of sort arrow animation.</p>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2.sort_arrow_icon","title":"sort_arrow_icon","text":"<pre><code>sort_arrow_icon: IconValue = ARROW_UPWARD\n</code></pre> <p>Icon shown when sorting is applied.</p>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2.sort_arrow_icon_color","title":"sort_arrow_icon_color","text":"<pre><code>sort_arrow_icon_color: ColorValue | None = None\n</code></pre> <p>When set always overrides/preceeds default arrow icon color.</p>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2.sort_ascending","title":"sort_ascending","text":"<pre><code>sort_ascending: bool = False\n</code></pre> <p>Whether the column mentioned in <code>sort_column_index</code>, if any, is sorted in ascending order.</p> <p>If <code>True</code>, the order is ascending (meaning the rows with the smallest values for the current sort column are first in the table).</p> <p>If <code>False</code>, the order is descending (meaning the rows with the smallest values for the current sort column are last in the table).</p>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2.sort_column_index","title":"sort_column_index","text":"<pre><code>sort_column_index: int | None = None\n</code></pre> <p>The current primary sort key's column.</p> <p>If specified, indicates that the indicated column is the column by which the data is sorted. The number must correspond to the index of the relevant column in <code>columns</code>.</p> <p>Setting this will cause the relevant column to have a sort indicator displayed.</p> <p>When this is <code>None</code>, it implies that the table's sort order does not correspond to any of the columns.</p>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2.tooltip","title":"tooltip","text":"<pre><code>tooltip: TooltipValue | None = None\n</code></pre> <p>The tooltip ot show when this control is hovered over.</p>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2.top","title":"top","text":"<pre><code>top: Number | None = None\n</code></pre> <p>The distance that the child's top edge is inset from the top of the stack.</p> Note <p>Effective only if this control is a descendant of one of the following: <code>Stack</code> control, <code>Page.overlay</code> list.</p>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2.vertical_lines","title":"vertical_lines","text":"<pre><code>vertical_lines: BorderSide | None = None\n</code></pre> <p>Set the color and width of vertical lines between columns.</p>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2.visible","title":"visible","text":"<pre><code>visible: bool = True\n</code></pre> <p>Every control has <code>visible</code> property which is <code>True</code> by default - control is rendered on the page. Setting <code>visible</code> to <code>False</code> completely prevents control (and all its children if any) from rendering on a page canvas. Hidden controls cannot be focused or selected with a keyboard or mouse and they do not emit any events.</p>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2.visible_horizontal_scroll_bar","title":"visible_horizontal_scroll_bar","text":"<pre><code>visible_horizontal_scroll_bar: bool | None = None\n</code></pre> <p>Determines visibility of the horizontal scrollbar.</p>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2.visible_vertical_scroll_bar","title":"visible_vertical_scroll_bar","text":"<pre><code>visible_vertical_scroll_bar: bool | None = None\n</code></pre> <p>Determines visibility of the vertical scrollbar.</p>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2.width","title":"width","text":"<pre><code>width: Number | None = None\n</code></pre> <p>Imposed Control width in virtual pixels.</p>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2.__contains__","title":"__contains__","text":"<pre><code>__contains__(item)\n</code></pre>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2.__hash__","title":"__hash__","text":"<pre><code>__hash__() -&gt; int\n</code></pre>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2.__init__","title":"__init__","text":"<pre><code>__init__(\n    *,\n    data: Any = skip_field(),\n    key: KeyValue | None = None,\n    ref: InitVar[Ref[BaseControl] | None] = None,\n    expand: bool | int | None = None,\n    expand_loose: bool = False,\n    col: ResponsiveNumber = 12,\n    opacity: Number = 1.0,\n    tooltip: TooltipValue | None = None,\n    badge: BadgeValue | None = None,\n    visible: bool = True,\n    disabled: bool = False,\n    rtl: bool = False,\n) -&gt; None\n</code></pre>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2.__post_init__","title":"__post_init__","text":"<pre><code>__post_init__(ref: Ref[Any] | None)\n</code></pre>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2._invoke_method","title":"_invoke_method","text":"<pre><code>_invoke_method(\n    method_name: str,\n    arguments: dict[str, Any] | None = None,\n    timeout: float | None = None,\n) -&gt; Any\n</code></pre>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2._trigger_event","title":"_trigger_event","text":"<pre><code>_trigger_event(event_name: str, event_data: Any)\n</code></pre>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2.before_event","title":"before_event","text":"<pre><code>before_event(e: ControlEvent)\n</code></pre>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2.before_update","title":"before_update","text":"<pre><code>before_update()\n</code></pre>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2.build","title":"build","text":"<pre><code>build()\n</code></pre> <p>Called once during control initialization to define its child controls. self.page is available in this method.</p>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2.clean","title":"clean","text":"<pre><code>clean() -&gt; None\n</code></pre>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2.did_mount","title":"did_mount","text":"<pre><code>did_mount()\n</code></pre>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2.init","title":"init","text":"<pre><code>init()\n</code></pre>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2.is_isolated","title":"is_isolated","text":"<pre><code>is_isolated()\n</code></pre>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2.update","title":"update","text":"<pre><code>update() -&gt; None\n</code></pre>"},{"location":"datatable2/#flet_datatable2.datatable2.DataTable2.will_unmount","title":"will_unmount","text":"<pre><code>will_unmount()\n</code></pre>"},{"location":"license/","title":"License","text":"<pre><code>                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n</code></pre>"},{"location":"types/datacolumn_size/","title":"DataColumnSize","text":""},{"location":"types/datacolumn_size/#flet_datatable2.datacolumn2.DataColumnSize","title":"<code>DataColumnSize</code>","text":"<p>               Bases: <code>Enum</code></p> <p>Relative size of a column determines the share of total table width allocated to each individual column.</p> <p>When determining column widths, ratios between <code>S</code>, <code>M</code> and <code>L</code> columns are kept (i.e. Large columns are set to 1.2x width of Medium ones).</p> <p>See <code>DataTable2.sm_ratio</code>, <code>DataTable2.lm_ratio</code>.</p>"},{"location":"types/datacolumn_size/#flet_datatable2.datacolumn2.DataColumnSize.L","title":"<code>L = 'l'</code>","text":""},{"location":"types/datacolumn_size/#flet_datatable2.datacolumn2.DataColumnSize.M","title":"<code>M = 'm'</code>","text":""},{"location":"types/datacolumn_size/#flet_datatable2.datacolumn2.DataColumnSize.S","title":"<code>S = 's'</code>","text":""}]}